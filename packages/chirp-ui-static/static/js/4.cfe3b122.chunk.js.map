{"version":3,"sources":["components/views/Search.module.scss","components/views/Search.tsx"],"names":["module","exports","Search","useState","query","setQuery","user","setUser","timestamp","setTimestamp","limit","setLimit","following","setFollowing","items","setItems","push","useHistory","useUser","token","done","useEffect","a","date","Date","Number","timePayload","Math","round","getTime","undefined","limitPayload","api","method","headers","Authorization","data","q","username","status","searchResponseItems","doSearch","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","checked","length","map","id","itemTime","content","time","key","className","styles","item","clickable","onClick","heading","sub","toString"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,QAAU,wBAAwB,IAAM,sB,iIC2L7GC,UAjLU,WAAO,IAAD,EACDC,mBAAiB,IADhB,mBACpBC,EADoB,KACbC,EADa,OAEHF,mBAAiB,IAFd,mBAEpBG,EAFoB,KAEdC,EAFc,OAGOJ,mBAAiB,IAHxB,mBAGpBK,EAHoB,KAGTC,EAHS,OAIDN,mBAAiB,GAJhB,mBAIpBO,EAJoB,KAIbC,EAJa,OAKOR,oBAAkB,GALzB,mBAKpBS,EALoB,KAKTC,EALS,OAMDV,mBAAiB,IANhB,mBAMpBW,EANoB,KAMbC,EANa,KAOnBC,EAASC,cAATD,KAPmB,EAavBE,cAJAC,EATuB,EASvBA,MAEIC,EAXmB,EAUvBd,KACIc,KAgHR,OA1CAC,qBAAU,YACQ,uCAAG,wCAAAC,EAAA,sEAEHC,EAAO,IAAIC,KAAKC,OAAOjB,IACvBkB,EAAclB,EACdmB,KAAKC,MAAML,EAAKM,gBAChBC,EACAC,EAAerB,QAASoB,EANrB,SAWGE,YACR,UACA,CACIC,OAAQ,OACRC,QAASf,EAAQ,CACbgB,cAAc,UAAD,OAAYhB,IACzB,KACJiB,KAAM,CACFC,EAAGjC,EACHI,UAAWkB,EACXhB,MAAOqB,EACPO,SAAUhC,EACVM,eAvBH,oBAQDwB,KACJG,EATK,EASLA,OACOC,EAVF,EAUL1B,MAkBW,OAAXyB,GACIzB,GACAC,EAASyB,GA9BR,4GAAH,qDAsCdC,KACD,CAACrC,EAAOE,EAAME,EAAWE,EAAOE,IAE9BQ,EAKD,0BACIsB,SA9Fa,SAACC,GAClBA,EAAMC,mBA+FF,2BACIC,KAAK,OACLC,YAAY,SACZC,MAAQ3C,EACR4C,SAxHU,SAACL,GACnBtC,EAASsC,EAAMM,OAAOF,UAyHlB,2BACIF,KAAK,OACLC,YAAY,YACZC,MAAQzC,EACR0C,SA1HS,SAACL,GAClBpC,EAAQoC,EAAMM,OAAOF,UA2HjB,2BACIF,KAAK,SACLC,YAAY,yBACZC,MAAQvC,EACRwC,SA5Hc,SAACL,GACvBlC,EAAakC,EAAMM,OAAOF,UA6HtB,2BACIF,KAAK,SACLE,MAAQrC,EACRsC,SA7HU,SAACL,GACnBhC,EAASc,OAAOkB,EAAMM,OAAOF,WA8HzB,+BACI,2BACIF,KAAK,WACLK,QAAUtC,EACVoC,SA/HU,SAACL,GACvB9B,EAAa8B,EAAMM,OAAOC,YAgIlB,iDAIJ,6BACuB,IAAjBpC,EAAMqC,OAEA,2CAhIMrC,EAAMsC,KAAI,YAK7B,IAJHC,EAIE,EAJFA,GACAf,EAGE,EAHFA,SACWgB,EAET,EAFF9C,UACA+C,EACE,EADFA,QAEMC,EAAO,IAAIhC,KAAgB,IAAX8B,GAMtB,OACI,yBACIG,IAAG,UAAMJ,GACTK,UAAYC,IAAOC,MAEnB,yBACIF,UAAYC,IAAOE,UACnBC,QAXQ,WAChB9C,EAAK,UAAD,OAAWqC,MAYP,wBACIK,UAAYC,IAAOI,SAEjBzB,GAEN,2BACMiB,IAGV,6BACMD,GAEN,yBACII,UAAYC,IAAOK,KAEjBR,EAAKS,kBAiDZ","file":"static/js/4.cfe3b122.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Search_item__1UHFg\",\"clickable\":\"Search_clickable__2cYX7\",\"heading\":\"Search_heading__3WmIa\",\"sub\":\"Search_sub__2Ty6a\"};","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { SearchAPIResponse } from \"../../models/api\";\nimport { Item } from \"../../models/data\";\n\nimport { api } from \"../../utils/api\";\n\nimport styles from \"./Search.module.scss\";\nimport useUser from \"../hooks/useUser\";\n\nconst Search: React.FC = () => {\n    const [query, setQuery] = useState<string>(\"\");\n    const [user, setUser] = useState<string>(\"\");\n    const [timestamp, setTimestamp] = useState<string>(\"\");\n    const [limit, setLimit] = useState<number>(5);\n    const [following, setFollowing] = useState<boolean>(true);\n    const [items, setItems] = useState<Item[]>([]);\n    const { push } = useHistory();\n    const {\n        token,\n        user: {\n            done\n        }\n    } = useUser();\n\n    const onQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setQuery(event.target.value);\n    };\n\n    const onUserChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setUser(event.target.value);\n    };\n\n    const onTimestampChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTimestamp(event.target.value);\n    };\n\n    const onLimitChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setLimit(Number(event.target.value));\n    };\n\n    const onFollowingChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFollowing(event.target.checked);\n    };\n\n    const onFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n    };\n\n    const renderItems = () => items.map(({\n        id,\n        username,\n        timestamp: itemTime,\n        content\n    }) => {\n        const time = new Date(itemTime * 1000);\n\n        const onItemClick = () => {\n            push(`/tweet/${id}`);\n        };\n\n        return (\n            <div\n                key={ `${id}` }\n                className={ styles.item }\n            >\n                <div\n                    className={ styles.clickable }\n                    onClick={ onItemClick }\n                >\n                    <h3\n                        className={ styles.heading }\n                    >\n                        { username }\n                    </h3>\n                    <p>\n                        { content }\n                    </p>\n                </div>\n                <div>\n                    { itemTime }\n                </div>\n                <div\n                    className={ styles.sub }\n                >\n                    { time.toString() }\n                </div>\n            </div>\n        );\n    });\n\n    useEffect(() => {\n        const doSearch = async () => {\n            try {\n                const date = new Date(Number(timestamp));\n                const timePayload = timestamp\n                    ? Math.round(date.getTime())\n                    : undefined;\n                const limitPayload = limit || undefined;\n\n                const { data: {\n                    status,\n                    items: searchResponseItems\n                } } = await api<SearchAPIResponse>(\n                    \"/search\",\n                    {\n                        method: \"POST\",\n                        headers: token ? {\n                            Authorization: `Bearer ${token}`\n                        } : null,\n                        data: {\n                            q: query,\n                            timestamp: timePayload,\n                            limit: limitPayload,\n                            username: user,\n                            following\n                        }\n                    }\n                );\n\n                if (status === \"OK\") {\n                    if (items) {\n                        setItems(searchResponseItems);\n                    }\n                }\n            } catch (e) {\n                // Query failed\n            }\n        };\n\n        doSearch();\n    }, [query, user, timestamp, limit, following]);\n\n    if (!done) {\n        return null;\n    }\n\n    return (\n        <form\n            onSubmit={ onFormSubmit }\n        >\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={ query }\n                onChange={ onQueryChange }\n            />\n            <input\n                type=\"text\"\n                placeholder=\"From user\"\n                value={ user }\n                onChange={ onUserChange }\n            />\n            <input\n                type=\"number\"\n                placeholder=\"Timestamp (in seconds)\"\n                value={ timestamp }\n                onChange={ onTimestampChange }\n            />\n            <input\n                type=\"number\"\n                value={ limit }\n                onChange={ onLimitChange }\n            />\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={ following }\n                    onChange={ onFollowingChange }\n                />\n                <span>\n                    Following only\n                </span>\n            </label>\n            <div>\n                { items.length === 0\n                    ? (\n                        <h2>\n                            No results!\n                        </h2>\n                    )\n                    : renderItems() }\n            </div>\n        </form>\n    );\n};\n\nexport default Search;\n"],"sourceRoot":""}