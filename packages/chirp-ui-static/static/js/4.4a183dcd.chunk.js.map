{"version":3,"sources":["components/views/ViewTweet.tsx"],"names":["ViewTweet","useState","error","setError","loaded","setLoaded","data","setData","id","useParams","useEffect","a","api","response","status","item","getItem","to","username","timestamp","content","time","Date","toString","renderTweet"],"mappings":"mLAmFeA,UA3Ea,WAAO,IAAD,EACJC,oBAAkB,GADd,mBACvBC,EADuB,KAChBC,EADgB,OAEFF,oBAAkB,GAFhB,mBAEvBG,EAFuB,KAEfC,EAFe,OAGNJ,mBAAsB,MAHhB,mBAGvBK,EAHuB,KAGjBC,EAHiB,KAItBC,EAAOC,cAAPD,GAERE,qBAAU,WACFR,GAIS,uCAAG,8BAAAS,EAAA,+EAIEC,YAAG,gBAA2BJ,IAJhC,gBAMgB,QAHdK,EAHF,EAGJP,MAGSQ,OACTP,EAAQM,EAASE,MAEjBZ,GAAS,GATL,gDAYRA,GAAS,GAZD,yBAcRE,GAAU,GAdF,4EAAH,oDAkBbW,KACD,CAACR,EAAIN,IAoCR,OAAOE,EAbCF,GAAkB,OAATI,EAIL,kBAAC,IAAD,CACIW,GAAG,eA1BC,SAAC,GAER,IADTC,EACQ,EADRA,SAAUC,EACF,EADEA,UAAWC,EACb,EADaA,QAEfC,EAAO,IAAIC,KAAiB,IAAZH,GAEtB,OACI,6BACI,4BACMD,GAEN,6BACMG,EAAKE,YAEX,6BACMH,IAiBPI,CAAYlB,GAMf","file":"static/js/4.4a183dcd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport { ItemAPIResponse } from \"../../models/api\";\nimport { Item } from \"../../models/data\";\n\nimport { api } from \"../../utils/api\";\n\nconst ViewTweet: React.FC = () => {\n    const [error, setError] = useState<boolean>(false);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [data, setData] = useState<Item | null>(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (error) {\n            return;\n        }\n\n        const getItem = async () => {\n            try {\n                const {\n                    data: response\n                } = await api<ItemAPIResponse>(`/item/${id}`);\n\n                if (response.status === \"OK\") {\n                    setData(response.item);\n                } else {\n                    setError(true);\n                }\n            } catch (e) {\n                setError(true);\n            } finally {\n                setLoaded(true);\n            }\n        };\n\n        getItem();\n    }, [id, error]);\n\n    const renderTweet = ({\n        username, timestamp, content\n    }: Item) => {\n        const time = new Date(timestamp * 1000);\n\n        return (\n            <div>\n                <h3>\n                    { username }\n                </h3>\n                <div>\n                    { time.toString() }\n                </div>\n                <div>\n                    { content }\n                </div>\n            </div>\n        );\n    };\n\n    const renderResult = () => {\n        if (error || data === null) {\n            // Tweet not found\n\n            return (\n                <Redirect\n                    to=\"/not-found\"\n                />\n            );\n        }\n\n        return renderTweet(data);\n    };\n\n    return loaded\n        ? renderResult()\n        : (\n            <div>\n                Loading...\n            </div>\n        );\n};\n\nexport default ViewTweet;\n"],"sourceRoot":""}