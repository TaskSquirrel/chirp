{"version":3,"sources":["utils/api.ts","components/hooks/useUser.ts","components/StorageProvider.tsx","components/UserProvider.tsx","components/views/User.module.scss","App.module.scss","components/views/Layout.module.scss","components/views/NotFound.tsx","components/ChirpRouter.tsx","components/LoadingFallback.tsx","components/views/TweetHome.tsx","components/views/Home.tsx","components/views/Register.tsx","components/views/Login.tsx","components/views/Logout.tsx","components/views/Verify.tsx","components/views/User.tsx","components/auth/RequireAuthentication.tsx","components/auth/withRequireAuthentication.tsx","routes/chirp.ts","components/views/Layout.tsx","App.tsx","index.tsx"],"names":["api","endpoint","a","options","secure","HOST","process","protocol","axios","request","url","useUser","token","useContext","StorageContext","user","UserContext","React","createContext","setToken","StorageProvider","children","initialToken","localStorage","getItem","useState","value","useEffect","setItem","removeItem","Provider","done","authenticated","invalidate","UserProvider","setDone","authed","setAuthed","name","setName","providerValue","undefined","headers","Authorization","data","status","responseName","ping","module","exports","NotFound","ChirpRouter","routes","map","toRender","to","exact","Component","component","render","key","path","LoadingFallback","TweetHome","error","setError","content","setContent","itemID","setItemID","addTweet","method","id","onSubmit","event","preventDefault","TextField","multiline","placeholder","onChange","target","Button","type","variant","Home","Register","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","doSubmit","username","console","log","createOnChange","setter","Login","setErrorMessage","setNameError","setPasswordError","doSignIn","params","errorSetter","proceed","length","Logout","Verify","verified","setVerified","code","setCode","required","User","details","setDetails","userFollowing","setUserFollowing","followers","setFollowers","following","setFollowing","posts","setPosts","detailsError","setDetailsError","followersError","setFollowersError","followingError","setFollowingError","postsError","setPostsError","useParams","loggedInUser","renderList","list","createList","responseDetails","getUserDetails","users","includes","getFollowers","Error","message","getFollowing","items","getPosts","className","styles","btn","onClick","follow","warn","dispatchFollowRequest","renderFollowButton","RequireAuthentication","loading","not","redirectTo","withRequireAuthentication","redirect","WithRequireAuth","props","componentName","displayName","chirpRoutes","lazy","Layout","nav","text","App","Suspense","fallback","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f447e6e4.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\n\nimport { APIResponse } from \"../models/api\";\n\nexport const api = async <P extends APIResponse>(\n    endpoint: string,\n    options: AxiosRequestConfig = {},\n    secure?: boolean\n) => {\n    const {\n        REACT_APP_API_HOST: HOST\n    } = process.env;\n\n    const protocol = secure\n        ? \"https\"\n        : \"http\";\n\n    return axios.request<P>({\n        url: `${protocol}://${HOST}${endpoint}`,\n        ...options\n    });\n};\n","import { useContext } from \"react\";\n\nimport { StorageContext } from \"../StorageProvider\";\nimport { UserContext } from \"../UserProvider\";\n\nconst useUser = () => {\n    const { token } = useContext(StorageContext);\n    const user = useContext(UserContext);\n\n    return {\n        token,\n        user\n    };\n};\n\nexport default useUser;\n","import React, { useState, useEffect } from \"react\";\n\nexport interface StorageContextShape {\n    token: string | null;\n    setToken: (nextToken: string | null) => void | null;\n}\n\nexport const StorageContext = React.createContext<StorageContextShape>({\n    token: null,\n    setToken: () => null\n});\n\nconst StorageProvider: React.FC = ({ children }) => {\n    const initialToken = localStorage.getItem(\"token\");\n\n    const [token, setToken] = useState<string | null>(\n        initialToken || null\n    );\n\n    const value: StorageContextShape = {\n        token,\n        setToken\n    };\n\n    useEffect(() => {\n        if (token) {\n            localStorage.setItem(\"token\", token);\n        } else {\n            localStorage.removeItem(\"token\");\n        }\n    }, [token]);\n\n    return (\n        <StorageContext.Provider\n            value={ value }\n        >\n            { children }\n        </StorageContext.Provider>\n    );\n};\n\nexport default StorageProvider;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { StorageContext } from \"./StorageProvider\";\n\nimport { UserAPIResponse } from \"../models/api\";\n\nimport { api } from \"../utils/api\";\n\nexport interface UserContextShape {\n    done: boolean;\n    authenticated: boolean;\n    name?: string;\n    invalidate: () => void;\n}\n\nexport const UserContext = React.createContext<UserContextShape>({\n    done: false,\n    authenticated: false,\n    invalidate: () => {\n        // Noop\n    }\n});\n\nconst UserProvider: React.FC = ({\n    children\n}) => {\n    const [done, setDone] = useState<boolean>(false);\n    const [authed, setAuthed] = useState<boolean>(false);\n    const [name, setName] = useState<string | null>(null);\n\n    const { token, setToken } = useContext(StorageContext);\n\n    const invalidate = () => {\n        setAuthed(false);\n        setToken(null);\n    };\n\n    const providerValue: UserContextShape = {\n        done,\n        authenticated: authed,\n        invalidate,\n        name: name || undefined\n    };\n\n    useEffect(() => {\n        if (authed) {\n            return;\n        }\n\n        const ping = async () => {\n            try {\n                if (token) {\n                    const {\n                        data: {\n                            status,\n                            name: responseName\n                        }\n                    } = await api<UserAPIResponse>(\n                        \"/user\",\n                        {\n                            headers: {\n                                Authorization: `Bearer ${token}`\n                            }\n                        }\n                    );\n\n                    if (status === \"OK\") {\n                        setAuthed(true);\n                        setName(responseName);\n                    } else {\n                        setAuthed(false);\n                    }\n                }\n            } catch (e) {\n                setAuthed(false);\n            } finally {\n                setDone(true);\n            }\n        };\n\n        ping();\n    }, [authed, token]);\n\n    return (\n        <UserContext.Provider\n            value={ providerValue }\n        >\n            { children }\n        </UserContext.Provider>\n    );\n};\n\nexport default UserProvider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"User_btn__17Csu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Layout_nav__3zIw1\"};","import React from \"react\";\n\nconst NotFound: React.FC = () => {\n    return (\n        <div>\n            <h1>\n                Not found!\n            </h1>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Switch, Route as Goto, RouteComponentProps } from \"react-router-dom\";\n\nimport { Route } from \"../models/router\";\n\nimport NotFound from \"./views/NotFound\";\n\ninterface ChirpRouterProps {\n    routes: Route[];\n}\n\nconst ChirpRouter: React.FC<ChirpRouterProps> = ({\n    routes\n}) => {\n    return (\n        <Switch>\n            { routes.map(({\n                to, exact, component: Component, render\n            }) => {\n                let toRender: ((props: RouteComponentProps) => React.ReactNode) | (() => null);\n\n                if (Component) {\n                    toRender = () => (\n                        <Component />\n                    );\n                } else if (render) {\n                    toRender = render;\n                } else {\n                    toRender = () => null;\n                }\n\n                return (\n                    <Goto\n                        key={ to }\n                        path={ to }\n                        exact={ exact }\n                        render={ toRender }\n                    />\n                );\n            }) }\n            <Goto\n                component={ NotFound }\n            />\n        </Switch>\n    );\n};\n\nexport default ChirpRouter;\n","import React from \"react\";\n\nconst LoadingFallback: React.FC = () => (\n    <div>\n        Loading...\n    </div>\n);\n\nexport default LoadingFallback;\n","import React, { useState } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { InsertItemAPIResponse } from \"../../models/api\";\n\nimport useUser from \"../hooks/useUser\";\n\nimport { api } from \"../../utils/api\";\nimport { Link } from \"react-router-dom\";\n\nconst TweetHome: React.FC = () => {\n    const [error, setError] = useState<boolean>(false);\n    const [content, setContent] = useState<string>(\"\");\n    const [itemID, setItemID] = useState<string | null>(null);\n    const {\n        token\n    } = useUser();\n\n    const addTweet = async () => {\n        if (!content) {\n            setError(true);\n\n            return;\n        }\n\n        // Child type not implemented yet\n\n        try {\n            const { data: {\n                status,\n                id\n            } } = await api<InsertItemAPIResponse>(\n                \"/additem\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    },\n                    data: {\n                        content\n                    }\n                }\n            );\n\n            if (status === \"OK\") {\n                setItemID(id);\n            }\n        } catch (e) {\n            setError(true);\n        }\n    };\n\n    const onContentChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setError(false);\n        setContent(event.target.value);\n    };\n\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (content) {\n            addTweet();\n        } else {\n            setError(true);\n        }\n    };\n\n    return (\n        <form\n            onSubmit={ onSubmit }\n        >\n            <h1>\n                New tweet\n            </h1>\n            { itemID && (\n                <div>\n                    <Link\n                        to={ `/tweet/${itemID}` }\n                    >\n                        View new tweet\n                    </Link>\n                </div>\n            ) }\n            { error && (\n                <div>\n                    Some error ocurred!\n                </div>\n            ) }\n            <TextField\n                multiline\n                placeholder=\"What's going on?\"\n                value={ content }\n                onChange={ onContentChange }\n            />\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n            >\n                Chirp\n            </Button>\n            <Link\n                to=\"/search\"\n            >\n                Search tweets\n            </Link>\n            <Link\n                to=\"/signout\"\n            >\n                Sign out\n            </Link>\n        </form>\n    );\n};\n\nexport default TweetHome;\n","import React from \"react\";\n\nimport TweetHome from \"./TweetHome\";\nimport LoadingFallback from \"../LoadingFallback\";\n\nimport useUser from \"../hooks/useUser\";\nimport { Link } from \"react-router-dom\";\n\nconst Home: React.FC = () => {\n    const { user: {\n        done, authenticated\n    } } = useUser();\n\n    if (done && authenticated) {\n        return (\n            <TweetHome />\n        );\n    }\n\n    if (done && !authenticated) {\n        return (\n            <div>\n                <h1>\n                    Welcome to Chirp!\n                </h1>\n                <div>\n                    <Link\n                        to=\"/signin\"\n                    >\n                        Returning? Sign in.\n                    </Link>\n                </div>\n                <div>\n                    <Link\n                        to=\"/signup\"\n                    >\n                        Create an account for free!\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <LoadingFallback />\n    );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { api } from \"../../utils/api\";\n\nconst Register = () => {\n    const [done, setDone] = useState<boolean>(false);\n    const [error, setError] = useState<boolean>(false);\n    const [name, setName] = useState<string>(\"\");\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState<string>(\"\");\n\n    const doSubmit = async () => {\n        if (!name || !email || !password || !passwordConfirm) {\n            setError(true);\n\n            return;\n        }\n\n        if (password !== passwordConfirm) {\n            setError(true);\n\n            return;\n        }\n\n        try {\n            const { data: {\n                status\n            } } = await api(\n                \"/adduser\",\n                {\n                    method: \"POST\",\n                    data: {\n                        username: name,\n                        email,\n                        password\n                    }\n                }\n            );\n\n            if (status === \"OK\") {\n                setDone(true);\n            }\n        } catch (e) {\n            console.log(e);\n\n            setError(true);\n        }\n    };\n\n    const createOnChange = (setter: (next: string) => void) => (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setter(event.target.value);\n    };\n\n    const onFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        doSubmit();\n    };\n\n    return (\n        <form\n            onSubmit={ onFormSubmit }\n        >\n            { error && (\n                <div>\n                    Please check your information!\n                </div>\n            ) }\n            { done && (\n                <div>\n                    <span>\n                        Good news! You've signed up. Just verify your email and you're all set!\n                    </span>\n                </div>\n            ) }\n            <Link\n                to=\"/code\"\n            >\n                Verify here.\n            </Link>\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={ name }\n                onChange={ createOnChange(setName) }\n            />\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={ email }\n                onChange={ createOnChange(setEmail) }\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={ password }\n                onChange={ createOnChange(setPassword) }\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Password again\"\n                value={ passwordConfirm }\n                onChange={ createOnChange(setPasswordConfirm) }\n            />\n            <button>\n                Sign up\n            </button>\n        </form>\n    );\n};\n\nexport default Register;\n","import React, { useState, useContext } from \"react\";\n\nimport { LoginAPIResponse } from \"../../models/api\";\n\nimport { StorageContext } from \"../StorageProvider\";\n\nimport { api } from \"../../utils/api\";\n\nconst Login: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string | null>();\n    const [nameError, setNameError] = useState<boolean>(false);\n    const [passwordError, setPasswordError] = useState<boolean>();\n    const [name, setName] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n\n    const { setToken } = useContext(StorageContext);\n\n    const doSignIn = async () => {\n        try {\n            const { data: {\n                status,\n                token\n            } } = await api<LoginAPIResponse>(\n                \"/login\",\n                {\n                    method: \"POST\",\n                    params: {\n                        token: true\n                    },\n                    data: {\n                        username: name,\n                        password\n                    }\n                }\n            );\n\n            if (status === \"OK\" && token) {\n                setToken(token);\n            } else {\n                setErrorMessage(\"Failed to login!\");\n            }\n        } catch (e) {\n            setErrorMessage(\"Failed!\");\n        }\n    };\n\n    const createOnChange = (\n        setter: (next: string) => void,\n        errorSetter: (next: boolean) => void\n    ) => (\n        event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        setter(event.target.value);\n        errorSetter(false);\n    };\n\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        let proceed = true;\n\n        if (name.length < 1) {\n            proceed = false;\n            setNameError(true);\n        }\n\n        if (password.length < 1) {\n            proceed = false;\n            setPasswordError(true);\n        }\n\n        if (proceed) {\n            doSignIn();\n        }\n    };\n\n    return (\n        <form\n            onSubmit={ onSubmit }\n        >\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={ name }\n                onChange={ createOnChange(setName, setNameError) }\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={ password }\n                onChange={ createOnChange(setPassword, setPasswordError) }\n            />\n            <button\n                type=\"submit\"\n            >\n                Sign in\n            </button>\n        </form>\n    );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { StorageContext } from \"../StorageProvider\";\n\nimport useUser from \"../hooks/useUser\";\n\nconst Logout: React.FC = () => {\n    const {\n        user: {\n            invalidate\n        }\n    } = useUser();\n\n    invalidate();\n\n    return (\n        <Redirect\n            to=\"/signin\"\n        />\n    );\n};\n\nexport default Logout;\n","import React, { useState } from \"react\";\n\nimport { api } from \"../../utils/api\";\nimport { Link } from \"react-router-dom\";\n\nconst Verify: React.FC = () => {\n    const [error, setError] = useState<boolean>(false);\n    const [verified, setVerified] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>(\"\");\n    const [code, setCode] = useState<string>(\"\");\n\n    const doSubmit = async () => {\n        try {\n            const { data: {\n                status\n            } } = await api(\n                \"/verify\",\n                {\n                    method: \"POST\",\n                    data: {\n                        email,\n                        key: code\n                    }\n                }\n            );\n\n            if (status === \"OK\") {\n                setVerified(true);\n            }\n        } catch (e) {\n            setError(true);\n        }\n    };\n\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        doSubmit();\n    };\n\n    const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(event.target.value);\n    };\n\n    const onCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setCode(event.target.value);\n    };\n\n    return (\n        <form\n            onSubmit={ onSubmit }\n        >\n            { error && (\n                <div>\n                    Credentials incorrect!\n                </div>\n            ) }\n            { verified && (\n                <div>\n                    <span>\n                        You've been verified!\n                    </span>\n                    <Link\n                        to=\"/signin\"\n                    >\n                        Sign in!\n                    </Link>\n                </div>\n            ) }\n            <input\n                required\n                type=\"email\"\n                placeholder=\"Email\"\n                value={ email }\n                onChange={ onEmailChange }\n            />\n            <input\n                required\n                type=\"text\"\n                placeholder=\"Verification code\"\n                value={ code }\n                onChange={ onCodeChange }\n            />\n            <button\n                type=\"submit\"\n            >\n                Verify\n            </button>\n        </form>\n    );\n};\n\nexport default Verify;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport {\n    UserDetailsAPIResponse,\n    UserConnectionsAPIResponse,\n    UserPostsAPIResponse\n} from \"../../models/api\";\nimport { UserDetails } from \"../../models/data\";\n\nimport useUser from \"../hooks/useUser\";\n\nimport { api } from \"../../utils/api\";\n\nimport styles from \"./User.module.scss\";\n\nconst User: React.FC = () => {\n    const [details, setDetails] = useState<UserDetails | null>(null);\n    const [userFollowing, setUserFollowing] = useState<boolean>(false);\n    const [followers, setFollowers] = useState<string[] | null>(null);\n    const [following, setFollowing] = useState<string[] | null>(null);\n    const [posts, setPosts] = useState<string[] | null>(null);\n    const [detailsError, setDetailsError] = useState<boolean>(false);\n    const [followersError, setFollowersError] = useState<string | null>();\n    const [followingError, setFollowingError] = useState<string | null>();\n    const [postsError, setPostsError] = useState<string | null>();\n    const { user } = useParams();\n    const {\n        token,\n        user: { done, authenticated, name: loggedInUser }\n    } = useUser();\n\n    const renderPosts = () => {\n        if (!posts) {\n            return null;\n        }\n\n        return posts.map((id) => {\n            return (\n                <div\n                    key={ id }\n                >\n                    <Link\n                        to={ `/tweet/${id}` }\n                    >\n                        { id }\n                    </Link>\n                </div>\n            );\n        });\n    };\n\n    const createList = (list: string[]) => list.map((name) => (\n        <li\n            key={ name }\n        >\n            <Link\n                to={ `/profile/${name}` }\n            >\n                { name }\n            </Link>\n        </li>\n    ));\n\n    const renderList = (list: string[] | null) => list\n        ? (\n            <ul>\n                { createList(list) }\n            </ul>\n        )\n        : (\n            <div>\n                Loading...\n            </div>\n        );\n\n    const createOnFollowClick = (follow: boolean) => (\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n        const dispatchFollowRequest = async () => {\n            try {\n                const { data: {\n                    status\n                } } = await api(\n                    \"/follow\",\n                    {\n                        method: \"POST\",\n                        headers: {\n                            Authorization: `Bearer ${token}`\n                        },\n                        data: {\n                            username: user,\n                            follow\n                        }\n                    }\n                );\n\n                if (status === \"OK\") {\n                    setUserFollowing(follow);\n                }\n            } catch (e) {\n                console.warn(\"Follow request failed\");\n            }\n        };\n\n        dispatchFollowRequest();\n    };\n\n    const renderFollowButton = () => {\n        if (!done || !authenticated || !loggedInUser || !token) {\n            return null;\n        }\n\n        if (!followers) {\n            return null;\n        }\n\n        if (user === loggedInUser) {\n            return null;\n        }\n\n        return (\n            <button\n                className={ styles.btn }\n                onClick={ createOnFollowClick(!userFollowing) }\n            >\n                { userFollowing\n                    ? \"Unfollow\"\n                    : \"Follow\" }\n            </button>\n        );\n    };\n\n    useEffect(() => {\n        const getUserDetails = async () => {\n            try {\n                const { data: {\n                    status,\n                    user: responseDetails\n                } } = await api<UserDetailsAPIResponse>(\n                    `/user/${user}`\n                );\n\n                if (status === \"OK\") {\n                    setDetails(responseDetails);\n                } else {\n                    setDetailsError(true);\n                }\n            } catch (e) {\n                setDetailsError(true);\n            }\n        };\n\n        getUserDetails();\n    }, [user, userFollowing]);\n\n    useEffect(() => {\n        if (!details) {\n            return;\n        }\n\n        const getFollowers = async () => {\n            try {\n                const { data: {\n                    status,\n                    users,\n                    error\n                } } = await api<UserConnectionsAPIResponse>(\n                    `/user/${user}/followers`\n                );\n\n                if (status === \"OK\") {\n                    if (\n                        done\n                        && authenticated\n                        && loggedInUser\n                        && users.includes(loggedInUser)\n                    ) {\n                        setUserFollowing(users.includes(loggedInUser));\n                    }\n\n                    setFollowers(users);\n                } else {\n                    setFollowersError(error);\n                }\n            } catch (e) {\n                setFollowersError(\"Not sure what happend\");\n            }\n        };\n\n        getFollowers();\n    }, [details, authenticated, done, loggedInUser, user]);\n\n    useEffect(() => {\n        if (!details) {\n            return;\n        }\n\n        const getFollowing = async () => {\n            try {\n                const { data: {\n                    status,\n                    users,\n                    error\n                } } = await api<UserConnectionsAPIResponse>(\n                    `/user/${user}/following`\n                );\n\n                if (status === \"OK\") {\n                    setFollowing(users);\n                } else {\n                    throw new Error(error);\n                }\n            } catch (e) {\n                setFollowingError(e.message);\n            }\n        };\n\n        getFollowing();\n    }, [details, user]);\n\n    useEffect(() => {\n        if (!details) {\n            return;\n        }\n\n        const getPosts = async () => {\n            try {\n                const { data: {\n                    status,\n                    error,\n                    items\n                } } = await api<UserPostsAPIResponse>(\n                    `/user/${user}/posts`\n                );\n\n                if (status === \"OK\") {\n                    setPosts(items);\n                } else {\n                    throw new Error(error);\n                }\n            } catch (e) {\n                setPostsError(\"Failed to get posts\");\n            }\n        };\n\n        getPosts();\n    }, [details, user]);\n\n    if (!done) {\n        return null;\n    }\n\n    if (!details || detailsError) {\n        return (\n            <h2>\n                { `User ${user} not found!` }\n            </h2>\n        );\n    }\n\n    return (\n        <div>\n            <h1>\n                { user }\n            </h1>\n            <div>\n                { renderFollowButton() }\n            </div>\n            <div>\n                <h3>\n                    Posts\n                </h3>\n                { postsError || renderPosts() }\n            </div>\n            <div>\n                <h3>\n                    Followers\n                </h3>\n                <span>\n                    { `${details.followers} total followers` }\n                </span>\n                { followersError || renderList(followers) }\n            </div>\n            <div>\n                <h3>\n                    Following\n                </h3>\n                <span>\n                    { `${details.following} total following` }\n                </span>\n                { followingError || renderList(following) }\n            </div>\n        </div>\n    );\n};\n\nexport default User;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport useUser from \"../hooks/useUser\";\n\ninterface RequireAuthenticationProps {\n    not?: boolean;\n    loading?: React.ReactNode;\n    redirectTo: string;\n}\n\nconst RequireAuthentication: React.FC<RequireAuthenticationProps> = ({\n    children,\n    loading,\n    not,\n    redirectTo\n}) => {\n    const {\n        user: {\n            done,\n            authenticated\n        }\n    } = useUser();\n\n    if (!done) {\n        return (\n            <>\n                { loading || null }\n            </>\n        );\n    }\n\n    const condition = not\n        ? done && !authenticated\n        : done && authenticated;\n\n    if (condition) {\n        return (\n            <>\n                { children }\n            </>\n        );\n    }\n\n    return (\n        <Redirect\n            to={ redirectTo }\n        />\n    );\n};\n\nexport default RequireAuthentication;\n","import React from \"react\";\n\nimport RequireAuthentication from \"./RequireAuthentication\";\n\nconst withRequireAuthentication = (not?: boolean, to?: string) => (Component: React.FC) => {\n    const redirect = to || \"/\";\n\n    const WithRequireAuth: React.FC = (props) => (\n        <RequireAuthentication\n            not={ not }\n            redirectTo={ redirect }\n        >\n            <Component\n                { ...props }\n            />\n        </RequireAuthentication>\n    );\n\n    const componentName = Component.name\n        || Component.displayName\n        || \"Component\";\n\n    WithRequireAuth.displayName = `requireAuthentication(${componentName})`;\n\n    return WithRequireAuth;\n};\n\nexport default withRequireAuthentication;\n","import React from \"react\";\n\nimport { Route } from \"../models/router\";\n\nimport Home from \"../components/views/Home\";\nimport Register from \"../components/views/Register\";\nimport NotFound from \"../components/views/NotFound\";\nimport Login from \"../components/views/Login\";\nimport Logout from \"../components/views/Logout\";\nimport Verify from \"../components/views/Verify\";\nimport User from \"../components/views/User\";\nimport withRequireAuthentication from \"../components/auth/withRequireAuthentication\";\n\nconst chirpRoutes: Route[] = [\n    {\n        to: \"/\",\n        exact: true,\n        component: Home\n    },\n    {\n        to: \"/signin\",\n        exact: true,\n        component: withRequireAuthentication(true)(Login)\n    },\n    {\n        to: \"/signup\",\n        exact: true,\n        component: withRequireAuthentication(true)(Register)\n    },\n    {\n        to: \"/signout\",\n        exact: true,\n        component: withRequireAuthentication()(Logout)\n    },\n    {\n        to: \"/code\",\n        exact: true,\n        component: withRequireAuthentication(true)(Verify)\n    },\n    {\n        to: \"/tweet/:id\",\n        exact: true,\n        component: React.lazy(() => import(\"../components/views/ViewTweet\"))\n    },\n    {\n        to: \"/profile/:user\",\n        exact: true,\n        component: User\n    },\n    {\n        to: \"/search\",\n        exact: true,\n        component: React.lazy(() => import(\"../components/views/Search\"))\n    },\n    {\n        to: \"/not-found\",\n        exact: true,\n        component: NotFound\n    }\n];\n\nexport default chirpRoutes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Layout.module.scss\";\n\nconst Layout: React.FC = ({ children }) => {\n    const links = [\n        {\n            to: \"/\",\n            text: \"Home\"\n        },\n        {\n            to: \"/search\",\n            text: \"Search\"\n        }\n    ];\n\n    return (\n        <div>\n            <nav\n                className={ styles.nav }\n            >\n                { links.map(({ to, text }) => (\n                    <Link\n                        to={ to }\n                    >\n                        { text }\n                    </Link>\n                )) }\n            </nav>\n            <div>\n                { children }\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport StorageProvider from \"./components/StorageProvider\";\nimport UserProvider from \"./components/UserProvider\";\nimport ChirpRouter from \"./components/ChirpRouter\";\nimport LoadingFallback from \"./components/LoadingFallback\";\n\nimport routes from \"./routes/chirp\";\n\nimport styles from \"./App.module.scss\";\nimport \"./App.css\";\nimport Layout from \"./components/views/Layout\";\n\nconst App: React.FC = () => {\n    const renderFallback = () => (\n        <LoadingFallback />\n    );\n\n    return (\n        <BrowserRouter>\n            <StorageProvider>\n                <UserProvider>\n                    <React.Suspense\n                        fallback={ renderFallback() }\n                    >\n                        <Layout>\n                            <div\n                                className={ styles.app }\n                            >\n                                <ChirpRouter\n                                    routes={ routes }\n                                />\n                            </div>\n                        </Layout>\n                    </React.Suspense>\n                </UserProvider>\n            </StorageProvider>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}