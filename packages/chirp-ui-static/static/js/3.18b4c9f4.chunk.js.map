{"version":3,"sources":["components/Modal.module.scss","components/views/ViewTweet.module.scss","components/Modal.tsx","components/views/ViewTweet.tsx"],"names":["module","exports","Modal","children","show","onBackdropClick","className","styles","backdrop","onClick","event","target","currentTarget","ViewTweet","useState","error","setError","loaded","setLoaded","data","setData","dialog","setDialog","id","useParams","useUser","token","user","done","authenticated","name","allowDeletion","username","handleDeleteTweet","a","api","method","headers","Authorization","status","Error","deleteTweet","onModalBackdropClick","useEffect","response","item","getItem","renderTweet","timestamp","content","time","Date","to","toString","modal"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,SAAW,0B,mBCA7BD,EAAOC,QAAU,CAAC,MAAQ,2B,yHCmCXC,EA3BqB,SAAC,GAI9B,IAHHC,EAGE,EAHFA,SACAC,EAEE,EAFFA,KACAC,EACE,EADFA,gBAUA,OAAKD,EAKD,yBACIE,UAAYC,IAAOC,SACnBC,QAfoB,SACxBC,GAEIA,EAAMC,SAAWD,EAAME,eACvBP,MAaEF,GARC,M,gCCoKAU,UA7Ka,WAAO,IAAD,EACJC,oBAAkB,GADd,mBACvBC,EADuB,KAChBC,EADgB,OAEFF,oBAAkB,GAFhB,mBAEvBG,EAFuB,KAEfC,EAFe,OAGNJ,mBAAsB,MAHhB,mBAGvBK,EAHuB,KAGjBC,EAHiB,OAIFN,oBAAkB,GAJhB,mBAIvBO,EAJuB,KAIfC,EAJe,KAKtBC,EAAOC,cAAPD,GALsB,EAa1BE,cANAC,EAP0B,EAO1BA,MAP0B,IAQ1BC,KACIC,EATsB,EAStBA,KACAC,EAVsB,EAUtBA,cACAC,EAXsB,EAWtBA,KAIFC,EAAgB,WAClB,SAAKZ,IAASS,QAITC,GAAkBC,GAASJ,IAIXP,EAAba,WAESF,IAOfG,EAAoB,WACjBF,KAIY,uCAAG,4BAAAG,EAAA,+EAIAC,YAAI,SAAD,OACFZ,GACT,CACIa,OAAQ,SACRC,QAAS,CACLC,cAAc,UAAD,OAAYZ,MATzB,mBAcG,OAdH,EAEJP,KACJoB,OAHQ,sBAeF,IAAIC,MAfF,OAiBRlB,GAAU,GAjBF,0DAoBZN,GAAS,GApBG,0DAAH,oDAwBjByB,IAGEC,EAAuB,WACzBpB,GAAU,IAiBdqB,qBAAU,WACF5B,GAIS,uCAAG,8BAAAmB,EAAA,+EAIEC,YAAG,gBAA2BZ,IAJhC,mBAMgB,QAHdqB,EAHF,EAGJzB,MAGSoB,OANL,gBAOJnB,EAAQwB,EAASC,MAPb,6BASE,IAAIL,MATN,0DAYRxB,GAAS,GAZD,yBAcRE,GAAU,GAdF,6EAAH,oDAkBb4B,KACD,CAACvB,EAAIR,IAER,IAAMgC,EAAc,SAAC,GAER,IADTf,EACQ,EADRA,SAAUgB,EACF,EADEA,UAAWC,EACb,EADaA,QAEfC,EAAO,IAAIC,KAAiB,IAAZH,GAEtB,OACI,6BACI,6BACI,kBAAC,IAAD,CACII,GAAE,mBAAepB,IAEjB,4BACMA,IAnDjBD,IAKD,4BACItB,QAAUwB,GADd,UAJO,MAuDH,6BACMiB,EAAKG,YAEX,6BACMJ,GAEN,kBAAC,EAAD,CACI7C,KAAOiB,EACPhB,gBAAkBqC,GAElB,yBACIpC,UAAYC,IAAO+C,OADvB,cAwBhB,OAAK1B,EAIEX,EAjBCF,GAAkB,OAATI,EAIL,kBAAC,IAAD,CACIiC,GAAG,eAKRL,EAAY5B,GAUf,2CANG","file":"static/js/3.18b4c9f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3NJnA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ViewTweet_modal__30tbZ\"};","import React from \"react\";\n\nimport styles from \"./Modal.module.scss\";\n\ninterface ModalProps {\n    show: boolean;\n    onBackdropClick: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n    children,\n    show,\n    onBackdropClick\n}) => {\n    const handleBackdropClick = (\n        event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n        if (event.target === event.currentTarget) {\n            onBackdropClick();\n        }\n    };\n\n    if (!show) {\n        return null;\n    }\n\n    return (\n        <div\n            className={ styles.backdrop }\n            onClick={ handleBackdropClick }\n        >\n            { children }\n        </div>\n    );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Redirect, Link } from \"react-router-dom\";\n\nimport { ItemAPIResponse } from \"../../models/api\";\nimport { Item } from \"../../models/data\";\n\nimport Modal from \"../Modal\";\n\nimport useUser from \"../hooks/useUser\";\n\nimport { api } from \"../../utils/api\";\n\nimport styles from \"./ViewTweet.module.scss\";\n\nconst ViewTweet: React.FC = () => {\n    const [error, setError] = useState<boolean>(false);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [data, setData] = useState<Item | null>(null);\n    const [dialog, setDialog] = useState<boolean>(false);\n    const { id } = useParams();\n    const {\n        token,\n        user: {\n            done,\n            authenticated,\n            name\n        }\n    } = useUser();\n\n    const allowDeletion = () => {\n        if (!data || !done) {\n            return false;\n        }\n\n        if (!authenticated || !name || !token) {\n            return false;\n        }\n\n        const { username } = data;\n\n        if (username !== name) {\n            return false;\n        }\n\n        return true;\n    };\n\n    const handleDeleteTweet = () => {\n        if (!allowDeletion()) {\n            return;\n        }\n\n        const deleteTweet = async () => {\n            try {\n                const { data: {\n                    status\n                } } = await api(\n                    `/item/${id}`,\n                    {\n                        method: \"DELETE\",\n                        headers: {\n                            Authorization: `Bearer ${token}`\n                        }\n                    }\n                );\n\n                if (status !== \"OK\") {\n                    throw new Error();\n                } else {\n                    setDialog(true);\n                }\n            } catch (e) {\n                setError(true);\n            }\n        };\n\n        deleteTweet();\n    };\n\n    const onModalBackdropClick = () => {\n        setDialog(false);\n    };\n\n    const renderDeleteButton = () => {\n        if (!allowDeletion()) {\n            return null;\n        }\n\n        return (\n            <button\n                onClick={ handleDeleteTweet }\n            >\n                Delete\n            </button>\n        );\n    };\n\n    useEffect(() => {\n        if (error) {\n            return;\n        }\n\n        const getItem = async () => {\n            try {\n                const {\n                    data: response\n                } = await api<ItemAPIResponse>(`/item/${id}`);\n\n                if (response.status === \"OK\") {\n                    setData(response.item);\n                } else {\n                    throw new Error();\n                }\n            } catch (e) {\n                setError(true);\n            } finally {\n                setLoaded(true);\n            }\n        };\n\n        getItem();\n    }, [id, error]);\n\n    const renderTweet = ({\n        username, timestamp, content\n    }: Item) => {\n        const time = new Date(timestamp * 1000);\n\n        return (\n            <div>\n                <div>\n                    <Link\n                        to={ `/profile/${username}` }\n                    >\n                        <h3>\n                            { username }\n                        </h3>\n                    </Link>\n                    { renderDeleteButton() }\n                </div>\n                <div>\n                    { time.toString() }\n                </div>\n                <div>\n                    { content }\n                </div>\n                <Modal\n                    show={ dialog }\n                    onBackdropClick={ onModalBackdropClick }\n                >\n                    <div\n                        className={ styles.modal }\n                    >\n                        Deleted\n                    </div>\n                </Modal>\n            </div>\n        );\n    };\n\n    const renderResult = () => {\n        if (error || data === null) {\n            // Tweet not found\n\n            return (\n                <Redirect\n                    to=\"/not-found\"\n                />\n            );\n        }\n\n        return renderTweet(data);\n    };\n\n    if (!done) {\n        return null;\n    }\n\n    return loaded\n        ? renderResult()\n        : (\n            <div>\n                Loading...\n            </div>\n        );\n};\n\nexport default ViewTweet;\n"],"sourceRoot":""}